services:
  db:
    image: postgres:15-alpine
    env_file:
      - ./backend/.env.prod
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env.prod
    volumes:
      - backend_media:/app/media
      - ./resources:/app/resources:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      db:
        condition: service_healthy
    expose:
      - '8000'
    restart: unless-stopped

  nginx:
    build:
      context: ./frontend
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./run-certbot.sh:/run-certbot.sh
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  backend_media:
